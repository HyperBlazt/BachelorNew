using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration.Install;
using System.Linq;
using System.Threading.Tasks;

namespace MalwareDetectionSystem
{
    using System.ServiceProcess;

    [RunInstaller(true)]
    public partial class ProjectInstaller : System.Configuration.Install.Installer
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProjectInstaller"/> class.
        /// </summary>
        public ProjectInstaller()
        {
            InitializeComponent();
            serviceProcessInstaller1.Account = ServiceAccount.LocalSystem;
            Scanner.ServiceName = "Malware Detection Scanner";
            Scanner.Description = "Background Malware Scanner - supports start-up scanning.";
        }

        /// <summary>
        /// The service installer 1_ after install.
        /// </summary>
        /// <param name="sender">
        /// The sender.
        /// </param>
        /// <param name="e">
        /// The e.
        /// </param>
        private void serviceInstaller1_AfterInstall(object sender, InstallEventArgs e)
        {
        }

        /// <summary>
        /// The on before install.
        /// </summary>
        /// <param name="savedState">
        /// The saved state.
        /// </param>
        protected override void OnBeforeInstall(IDictionary savedState)
        {
            string parameter = "MySource1\" \"MyLogFile1";
            Context.Parameters["assemblypath"] = "\"" + Context.Parameters["assemblypath"] + "\" \"" + parameter + "\"";
            base.OnBeforeInstall(savedState);
        }

        private void serviceProcessInstaller1_AfterInstall(object sender, InstallEventArgs e)
        {

        }
    }
}
